name: Check Release
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["*"]

permissions:
  contents: write

jobs:
  check_release:
    timeout-minutes: 720
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: [check_release, link_check]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: "x64"
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      # Cache yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-pip-
      - name: Cache checked links
        if: ${{ matrix.group == 'link_check' }}
        uses: actions/cache@v2
        with:
          path: ~/.cache/pytest-link-check
          key: ${{ runner.os }}-linkcheck-${{ hashFiles('**/*.md', '**/*.rst') }}-md-links
          restore-keys: |
            ${{ runner.os }}-linkcheck-
      - name: Upgrade packaging dependencies
        run: |
          pip install --upgrade pip setuptools wheel --user
      - name: Check Release
        if: ${{ matrix.group == 'check_release' }}
        uses: jupyter-server/jupyter_releaser/.github/actions/check-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          RH_VERSION_SPEC: next
      - name: Check Links
        if: ${{ matrix.group == 'link_check' }}
        uses: jupyter-server/jupyter_releaser/.github/actions/check-links@v1
      - name: Upload Distributions
        uses: actions/upload-artifact@v2
        with:
          name: ipywidgets-jupyter-releaser-dist-${{ github.run_number }}
          path: .jupyter_releaser_checkout/dist
